{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAeC,SAASC,cAAc,kBACtCC,EAAcF,SAASC,cAAc,iBACrCE,EAAgBH,SAASC,cAAc,mBAC9BD,SAASC,cAAc,SAE/BG,iBAAiB,UAExB,SAAsBC,GACpBA,EAAEC,iBACF,IAAIC,EAAgB,EAChBC,GAAeL,EAAcM,MAC7BC,EAAa,EACjB,MAAMC,GAAcZ,EAAaU,MAC3BG,GAAaV,EAAYO,OAe/B,SAASI,IAbT,IAAuBC,EAAUC,EAc3BR,GAAiBC,IAdAM,EAeLP,EAfeQ,EAekB,IAAlBR,EAAsBI,EAAaC,EAd3D,IAAII,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACFF,EAAS,C,SAACH,E,MAAUC,IAEpBG,EAAO,C,SAACJ,E,MAAUC,GAAO,GAE1BA,EAAM,KAONQ,MAAK,EAACT,SAAEA,EAAQC,MAAEA,MACjBL,GAAcK,EACdS,EAAA3B,GAAS4B,OAAOC,QAAQ,uBAAqBZ,QAAiBJ,MAAe,IAE9EiB,OAAM,EAACb,SAAEA,EAAQC,MAAEA,MAClBL,GAAcK,EACdS,EAAA3B,GAAS4B,OAAOG,QAAQ,sBAAoBd,QAAeJ,MAAe,IAE3EmB,SAAQ,KACPtB,GAAiB,EACjBe,WAAWT,EAAcD,EAAU,G,CAI3CC,E","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst delayInputEl = document.querySelector('[name=\"delay\"]');\nconst stepInputEl = document.querySelector('[name=\"step\"]');\nconst amountInputEl = document.querySelector('[name=\"amount\"]');\nconst formEl = document.querySelector('.form');\n\nformEl.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(e) {\n  e.preventDefault();\n  let positionValue = 1;\n  let amountValue = +amountInputEl.value;\n  let totalDelay = 0;\n  const delayValue = +delayInputEl.value;\n  const stepValue = +stepInputEl.value;\n\n  function createPromise(position, delay) {\n    return new Promise((resolve, reject) => {\n      const shouldResolve = Math.random() > 0.3;\n      setTimeout(() => {\n        if (shouldResolve) {\n          resolve ({position, delay})\n        } else {\n          reject({position, delay})\n        }\n      }, delay);\n    });\n  }\n\n  function callPromises() {\n    if (positionValue <= amountValue) {\n      createPromise(positionValue, positionValue === 1 ? delayValue : stepValue)\n        .then(({ position, delay }) => {\n          totalDelay += delay;\n          Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${totalDelay}ms`);\n        })\n        .catch(({ position, delay }) => {\n          totalDelay += delay;;\n          Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${totalDelay}ms`)\n        })\n        .finally(() => {\n          positionValue += 1;\n          setTimeout(callPromises, stepValue);\n        })\n    };\n  };\n  callPromises()\n};"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$delayInputEl","document","querySelector","$47d4ff9957288465$var$stepInputEl","$47d4ff9957288465$var$amountInputEl","addEventListener","e","preventDefault","positionValue","amountValue","value","totalDelay","delayValue","stepValue","callPromises","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","then","$parcel$interopDefault","Notify","success","catch","failure","finally"],"version":3,"file":"03-promises.4c76aadf.js.map"}